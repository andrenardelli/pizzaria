<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ws="http://jax-ws.dev.java.net/spring/core" xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://jax-ws.dev.java.net/spring/core
	    http://jax-ws.java.net/spring/core.xsd
	    http://jax-ws.dev.java.net/spring/servlet
	    http://jax-ws.java.net/spring/servlet.xsd">

	<context:component-scan base-package="com.pizzaria" />

	<context:annotation-config />

	<bean id="lojaService" class="com.pizzaria.webservice.LojaWS" />

	<wss:binding url="/ws/lojaService">
		<wss:service><!-- nested bean is of course fine -->
			<ws:service bean="#lojaService" />
		</wss:service>
	</wss:binding>

	<!-- Heroku version -->

	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven 
		transaction-manager="transactionManager" />

	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg
			value="#{systemEnvironment['DATABASE_URL']}" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="url"
			value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
	</bean>

	<!-- Local Version -->

<!-- 	<bean id="entityManagerFactory" -->
<!-- 		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean"> -->
<!-- 		<property name="persistenceUnitName" value="pizzaria" /> -->
<!-- 	</bean> -->
<!-- 	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
<!-- 		<property name="entityManagerFactory" ref="entityManagerFactory" /> -->
<!-- 	</bean> -->
	
<!-- 	<tx:annotation-driven transaction-manager="transactionManager"/> -->


</beans>